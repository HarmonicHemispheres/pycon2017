{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# What's in your pip toolbox?\n",
    "### *Jon Banafato*\n",
    "<hr>\n",
    "## Description\n",
    "Pip is a great tool, but dependency management doesn't stop there. I'll explore several tools that work with pip to make managing your dependencies easier, faster, and safer. I'll cover generating dependencies a better way, maintaining your requirements.txt for the long-term, and exploring existing Python environments. Afterward, you'll never want to pip freeze > requirements.txt again.\n",
    "<hr>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dependency managements- Always use virtualenvs\n",
    "### First Try:\n",
    "- Move to virtualenv and use pip to install dependencies\n",
    "- `pip freeze > requirements.txt`\n",
    "- This method includes everything in your python library\n",
    "### Second Try:\n",
    "- Two sets of dependencies\n",
    "    - one for people\n",
    "    - one for machines\n",
    "- People Requirements\n",
    "    - Flask\n",
    "    - Unidecode\n",
    "- `pipreqs .`\n",
    "- this command moves all imports into requirements.txt\n",
    "- `pipreqs . --savepath requirements.in`\n",
    "- `pip-compile`\n",
    "- This makes a requirements.txt that only includes what is needed for the application to run\n",
    "### Pipfile: The future?\n",
    "- A PyPa alternative to pip-compile. possibly...\n",
    "<hr>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Staying Updated\n",
    "### CLI\n",
    "- `pip-list --outdated`\n",
    "- Checking the hash for all dependecies which will validate in case of a problem download or attack\n",
    "- `hashin` and `pip-compile --generate-hashes`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exploring an environment\n",
    "- `pipdeptree` this will generate a dependency graph of your current environment\n",
    "- `pipdeptree --reverse` \n",
    "- `pipsi install bpython` or `pipsi list` useful for installing python cli tools\n",
    "- `leak flask` gives info about the package given"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
